{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","resumes","newResumeData","name","number","profile","email","linkedin","editResumeData","id","newResumeModal","editResumeModal","exportPDF","_this","resume","save","this","_refreshResumes","setState","_this2","axios","post","then","response","push","data","_this3","_this$state$editResum","put","_this4","delete","_this5","get","_this6","map","resumee","react_default","a","createElement","className","main","paperSize","fileName","title","subject","keywords","ref","r","Card","CardBody","CardTitle","CardText","key","Button","color","size","onClick","editResume","bind","deleteResume","style","textAlign","marginBottom","margin","toggleNewResumeModal","Modal","isOpen","toggle","ModalHeader","ModalBody","FormGroup","Label","for","Input","value","onChange","e","target","ModalFooter","addResume","toggleEditResumeModal","updateResume","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b24a2181.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { PDFExport } from '@progress/kendo-react-pdf';\r\nimport { Input, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter, Table, Button,Card, CardImg, CardText, CardBody,\r\n  CardTitle, CardSubtitle } from 'reactstrap';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    resumes: [],\r\n    newResumeData: {\r\n      name: '',\r\n      number: '',\r\n      profile: '',\r\n      email: '',\r\n      linkedin: ''\r\n    },\r\n    editResumeData: {\r\n      id: '',\r\n      name: '',\r\n      number: '',\r\n      profile: '',\r\n      email: '',\r\n      linkedin: ''\r\n    },\r\n    newResumeModal: false,\r\n    editResumeModal: false\r\n  }\r\n  componentDidMount() {\r\n    this._refreshResumes();\r\n  }\r\n  toggleNewResumeModal() {\r\n    this.setState({\r\n      newResumeModal: ! this.state.newResumeModal\r\n    });\r\n  }\r\n  toggleEditResumeModal() {\r\n    this.setState({\r\n      editResumeModal: ! this.state.editResumeModal\r\n    });\r\n  }\r\n  addResume() {\r\n    axios.post('http://localhost:3001/resumes', this.state.newResumeData).then((response) => {\r\n      let { resumes } = this.state;\r\n\r\n      resumes.push(response.data);\r\n\r\n      this.setState({ resumes, newResumeModal: false, newResumeData: {\r\n        name: '',\r\n        number: '',\r\n        profile: '',\r\n        email: '',\r\n        linkedin: ''\r\n      }});\r\n    });\r\n  }\r\n  updateResume() {\r\n    let { name, number, profile, email , linkedin} = this.state.editResumeData;\r\n\r\n    axios.put('http://localhost:3001/resumes/' + this.state.editResumeData.id, {\r\n      name, number,profile,email, linkedin\r\n    }).then((response) => {\r\n      this._refreshResumes();\r\n\r\n      this.setState({\r\n        editResumeModal: false, editResumeData: { id: '', name: '', number: '',profile: '', email: '', linkedin: '' }\r\n      })\r\n    });\r\n  }\r\n  editResume(id, name, number, profile, email, linkedin) {\r\n    this.setState({\r\n      editResumeData: { id, name, number, profile , email, linkedin }, editResumeModal: ! this.state.editResumeModal\r\n    });\r\n  }\r\n  deleteResume(id) {\r\n    axios.delete('http://localhost:3001/resumes/' + id).then((response) => {\r\n      this._refreshResumes();\r\n    });\r\n  }\r\n  _refreshResumes() {\r\n    axios.get('http://localhost:3001/resumes').then((response) => {\r\n      this.setState({\r\n        resumes: response.data\r\n      })\r\n    });\r\n  }\r\n\r\n\r\n  resume;\r\n\r\n  exportPDF = () => {\r\n      this.resume.save();\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    let resumes = this.state.resumes.map((resumee) => {\r\n      return (\r\n\r\n<div>\r\n\r\n<div className=\"container\">\r\n<div className=\"row\">\r\n        <div className=\"col-sm-12\">\r\n\r\n        <PDFExport paperSize={'Letter'}\r\n            fileName=\"Resume.pdf\"\r\n            title=\"\"\r\n            subject=\"\"\r\n            keywords=\"\"\r\n            ref={(r) => this.resume = r}>\r\n\r\n                  <Card >\r\n                         <CardBody>\r\n                           <CardTitle className=\"text-center\"><b>Resume { resumee.id}</b></CardTitle>\r\n\r\n                           <CardText >\r\n                            <div >\r\n                           <div className=\"row\" key={resumee.id}>\r\n                           <div className=\"col-sm-6\" >\r\n                               <div><b>Name :</b> {resumee.name}</div> <br />\r\n                               <div><b>Contact :</b> {resumee.number}</div>\r\n\r\n                               </div>\r\n\r\n                               <div className=\"col-sm-6\" >\r\n\r\n\r\n                               <div><b>Email Id :</b> {resumee.email}</div> <br />\r\n                               <div><b>Linked In :</b> {resumee.linkedin}</div>\r\n\r\n                                   </div>\r\n\r\n                               </div>\r\n\r\n                               <div className=\"row\">\r\n                                <div className=\"col-sm-12\" ><br />\r\n                               <div><b>Profile Summary :</b> {resumee.profile}</div>\r\n                               </div>\r\n                              </div>\r\n\r\n                             </div></CardText>\r\n\r\n                         </CardBody>\r\n                       </Card><br />\r\n       </PDFExport>\r\n\r\n\r\n  </div>\r\n\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n  <div>\r\n    <Button color=\"success\" size=\"sm\" className=\"mr-2\" onClick={this.editResume.bind(this, resumee.id, resumee.name, resumee.number, resumee.profile , resumee.email, resumee.linkedin)}>Edit</Button>\r\n    <Button color=\"danger\" size=\"sm\" onClick={this.deleteResume.bind(this, resumee.id)}>Delete</Button>\r\n  </div>\r\n\r\n  <div style={{ textAlign: 'center', marginBottom: 10 }}><Button color=\"primary\" onClick={this.exportPDF} style={{ margin: 'auto' }}>download</Button></div>\r\n\r\n<br />\r\n<hr />\r\n<br />\r\n\r\n  </div>\r\n      )\r\n    });\r\n\r\n    return (\r\n      <div className=\"App container\">\r\n\r\n      <h1>Resume Editing App</h1>\r\n\r\n      <Button className=\"my-3\" color=\"primary\" onClick={this.toggleNewResumeModal.bind(this)}>Add Your Resume</Button>\r\n\r\n      <Modal isOpen={this.state.newResumeModal} toggle={this.toggleNewResumeModal.bind(this)}>\r\n        <ModalHeader toggle={this.toggleNewResumeModal.bind(this)}>Add a new Resume</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name</Label>\r\n            <Input id=\"name\" value={this.state.newResumeData.name} onChange={(e) => {\r\n              let { newResumeData } = this.state;\r\n\r\n              newResumeData.name = e.target.value;\r\n\r\n              this.setState({ newResumeData });\r\n            }} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"number\">Number</Label>\r\n            <Input id=\"number\" value={this.state.newResumeData.number} onChange={(e) => {\r\n              let { newResumeData } = this.state;\r\n\r\n              newResumeData.number = e.target.value;\r\n\r\n              this.setState({ newResumeData });\r\n            }} />\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Label for=\"profile\">Profile</Label>\r\n            <Input id=\"profile\" value={this.state.newResumeData.profile} onChange={(e) => {\r\n              let { newResumeData } = this.state;\r\n\r\n              newResumeData.profile = e.target.value;\r\n\r\n              this.setState({ newResumeData });\r\n            }} />\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Label for=\"email\">Email</Label>\r\n            <Input id=\"email\" value={this.state.newResumeData.email} onChange={(e) => {\r\n              let { newResumeData } = this.state;\r\n\r\n              newResumeData.email = e.target.value;\r\n\r\n              this.setState({ newResumeData });\r\n            }} />\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Label for=\"linkedin\">Profile</Label>\r\n            <Input id=\"linkedin\" value={this.state.newResumeData.linkedin} onChange={(e) => {\r\n              let { newResumeData } = this.state;\r\n\r\n              newResumeData.linkedin = e.target.value;\r\n\r\n              this.setState({ newResumeData });\r\n            }} />\r\n          </FormGroup>\r\n\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.addResume.bind(this)}>Add Your Resume</Button>{' '}\r\n          <Button color=\"secondary\" onClick={this.toggleNewResumeModal.bind(this)}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n      <Modal isOpen={this.state.editResumeModal} toggle={this.toggleEditResumeModal.bind(this)}>\r\n        <ModalHeader toggle={this.toggleEditResumeModal.bind(this)}>Edit a new Resume</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name</Label>\r\n            <Input id=\"name\" value={this.state.editResumeData.name} onChange={(e) => {\r\n              let { editResumeData } = this.state;\r\n\r\n              editResumeData.name = e.target.value;\r\n\r\n              this.setState({ editResumeData });\r\n            }} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"number\">Number</Label>\r\n            <Input id=\"number\" value={this.state.editResumeData.number} onChange={(e) => {\r\n              let { editResumeData } = this.state;\r\n\r\n              editResumeData.number = e.target.value;\r\n\r\n              this.setState({ editResumeData });\r\n            }} />\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Label for=\"profile\">Profile</Label>\r\n            <Input id=\"profile\" value={this.state.editResumeData.profile} onChange={(e) => {\r\n              let { editResumeData } = this.state;\r\n\r\n              editResumeData.profile = e.target.value;\r\n\r\n              this.setState({ editResumeData });\r\n            }} />\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Label for=\"email\">Email</Label>\r\n            <Input id=\"email\" value={this.state.editResumeData.email} onChange={(e) => {\r\n              let { editResumeData } = this.state;\r\n\r\n              editResumeData.email = e.target.value;\r\n\r\n              this.setState({ editResumeData });\r\n            }} />\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup>\r\n            <Label for=\"linkedin\">LinkedIn</Label>\r\n            <Input id=\"linkedin\" value={this.state.editResumeData.linkedin} onChange={(e) => {\r\n              let { editResumeData } = this.state;\r\n\r\n              editResumeData.linkedin = e.target.value;\r\n\r\n              this.setState({ editResumeData });\r\n            }} />\r\n          </FormGroup>\r\n\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.updateResume.bind(this)}>Update Resume</Button>{' '}\r\n          <Button color=\"secondary\" onClick={this.toggleEditResumeModal.bind(this)}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n{resumes}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}